name: Schedule run with Multiple Jobs Example 
on: 
  schedule:
   - cron: '*/5 * * * *' # every 5 min 
   - cron: '0 */1 * * *' # every hour
   # - cron: '05 09 * * 1,3'
   # - cron: '05 09 * * 2,6'
  workflow_dispatch: 
   inputs:
     text:
       description: 'enter your text'
       default: 'Hello'
       required: true
       type: string
env:
  firstname: 'bhavesh'
  website: 'Test Website'

# Can have multiple jobs, but this example is just one build job.
jobs:
  test_schedule:
   runs-on: ubuntu-latest
   steps:
    - name: Not on Monday or Wednesday
      if: github.event.schedule != '0/5 * * * *'
      run: echo "This step will be skipped on every 5 min schedule"
    - name: Every time
      run: echo "This step will always run"
  context-demo:
    timeout-minutes: 5
    continue-on-error: false
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [windows-latest]
    steps:
     #- run: echo ${{ inputs.text }}
     - run: echo ${{ github.event.inputs.text }}
     - run: echo ${{ github.actor }}
     - run: echo 'Hello ${{ env.firstname }}'
     - run: echo 'Website - ${{ env.website }}'
     - run: echo ${{ job.status }}
     - run: echo ${{ runner.os }}
     - run: echo 'Secret ${{ secrets.password }}'
     - run: echo 'Variable ${{vars.ALLURE_RESULTS_PATH}}'
  job2:
    needs: [context-demo]
    runs-on: ubuntu-latest
    steps:
     - run: echo 'runs after context-demo'
  job3:
    runs-on: windows-latest
    needs: [context-demo]
    if: ${{success()}}
    steps:
      - run: echo 'job 3 runs on first job success'
  job4:
    runs-on: ubuntu-latest
    needs: [context-demo]
    if: ${{ failure()}}
    steps:
     - run: echo 'job 4 runs on first job failure'
  job5:
    runs-on: windows-latest
    needs: [job4]
    if: ${{always()}}
    steps:
      - run: echo 'job 5 will run though job4 fail or pass'
